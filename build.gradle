//
//   Copyright 2016  Cityzen Data
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2"
    }
  }
}

apply plugin: 'java';
apply plugin: 'eclipse';
apply plugin: 'idea';
apply plugin: 'maven';
apply plugin: 'maven-publish';

group = 'io.warp10'

archivesBaseName = 'warp10-pyspark-demo'

//
// Configurations scp uploadArchives task
//
configurations {
  provided
}

//
// Force versions
//
configurations.all {
  resolutionStrategy {
    // fail eagerly on version conflict (includes transitive dependencies)
    // e.g. multiple different versions of the same dependency (group and name are equal)
    //failOnVersionConflict()

    // force certain versions of dependencies (including transitive)
    //  *append new forced modules:
    // This is needed to force Guava to 15.0 and not 17.0 as Renjin pulls
    // HBase does not work with > 15.0
    force 'com.google.guava:guava:15.0'
  }
}

//
// Project source sets
// MUST appear before 'dependencies' so all source sets are known
//

sourceSets {
  main {
    compileClasspath += configurations.provided
  }
}

repositories {
  jcenter()
  maven {
    url 'https://repository.apache.org/content/groups/public'
  }
  mavenCentral()
  mavenLocal()
  maven {
    url "http://maven.twttr.com"
  }
  // bedatadriven - http://www.renjin.org/#downloads
  maven {
    url "http://nexus.bedatadriven.com/content/groups/public/"
  }
  maven {
    url "http://repo.opengeo.org/"
  }

  maven {
    url 'https://dl.bintray.com/hbs/maven'
  }

  maven {
    url 'https://dl.bintray.com/cityzendata/maven'
  }

  maven {
    url "http://127.0.0.1:40080/m2"
  }

}

// GLOBAL DEPENDENCIES
dependencies {
  //
  // WarpScript
  //
  compile 'io.warp10:warp10-spark:0.0.5'

  testCompile group: 'junit', name: 'junit', version: '4.6'

}

//
// IDE CONFIGURATIONS
//
// IDEA DEFAULT CONFIGURATION
idea {
  module {
    inheritOutputDirs = true
    // add build/classes directory to excluded folders: index bytecode is not a really good idea ;)
    excludeDirs += file('build')
  }
}
// ECLIPSE
eclipse {
  classpath {
    //customizing the classes output directory:
    defaultOutputDir = file('build-eclipse')

    //default settings for downloading sources and Javadoc:
    downloadSources = true
    downloadJavadoc = false
  }
}

task pack(type: Jar, dependsOn: jar) {
  zip64 = true

  manifest {
    attributes("Implementation-Title": "warp10-pyspark-demo")
  }

  from {
    configurations.compile.collect {
      it.isDirectory() ? it : zipTree(it).matching {
        exclude { it.toString().contains('servlet-api') }
        exclude { it.toString().contains('jmh') }
        exclude { it.toString().contains('junit') }
        exclude { it.toString().contains('parquet') }
        exclude { it.toString().contains('org.apache.hadoop') }
        exclude { it.toString().contains('org.apache.spark') }
        exclude { it.toString().contains('org.scala') }
      }
    }
  } {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'about.html'
    exclude 'about_files/**'
    exclude 'plugin.properties'
    exclude 'jetty-dir.css'
  }
  with jar
}

task packAll(type: Jar, dependsOn: pack) {
  zip64 = true
  appendix = 'all'

  from zipTree(pack.archivePath)
  from files(sourceSets.test.resources)
}

task packWithTests(type: Jar, dependsOn: pack) {
  zip64 = true
  appendix = 'tests'

  from zipTree(pack.archivePath)
  from sourceSets.test.output
}
